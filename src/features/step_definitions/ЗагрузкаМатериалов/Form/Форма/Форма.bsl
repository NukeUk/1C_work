
#Область Служебные_функции_и_процедуры

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПодготавливаюГруппуСНаименованиемСправочника(Парам01,Парам02)","ЯПодготавливаюГруппуСНаименованиемСправочника","Допустим я подготавливаю группу с наименованием ""Материалы"" справочника ""Номенклатура""","","");
//	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯОткрылНовыйСеансTestClientИлиПодключилУжеСуществующий()","ЯОткрылНовыйСеансTestClientИлиПодключилУжеСуществующий","Дано Я открыл новый сеанс TestClient или подключил уже существующий","",""); //уже был в C:\Repo\vanessa-behavior\features\Libraries\TestClients\step_definitions\РаботаСTestClient.epf
//	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗакрылВсеОкнаКлиентскогоПриложения()","ЯЗакрылВсеОкнаКлиентскогоПриложения","И    Я закрыл все окна клиентского приложения","",""); //уже был в C:\Repo\vanessa-behavior\features\Libraries\UITestRunner\step_definitions\РаботаСИнтерфейсом.epf
//	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"Пауза(Парам01)","Пауза","И Пауза 3","",""); //уже был в C:\Repo\vanessa-behavior\features\Libraries\Пауза\step_definitions\СделатьПаузу.epf
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВСправочникеВГруппеСНаименованиемНетЭлементов(Парам01,Парам02)","ВСправочникеВГруппеСНаименованиемНетЭлементов","Допустим в справочнике ""Номенклатура"" в группе с наименованием ""Материалы"" нет элементов","","");
//	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ОткрылосьОкно(Парам01)","ОткрылосьОкно","Когда открылось окно ""hot click""","",""); //уже был в C:\Repo\vanessa-behavior\features\Libraries\UITestRunner\step_definitions\РаботаСИнтерфейсом.epf
//	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВФормеВТаблицеЯПерехожуКСтроке(Парам01,Парам02,ТабПарам)","ВФормеВТаблицеЯПерехожуКСтроке","И     В форме ""hot click"" в таблице ""Состав"" я перехожу к строке:","",""); //уже был в C:\Repo\vanessa-behavior\features\Libraries\UITestRunner\step_definitions\РаботаСИнтерфейсом.epf
//	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯНажимаюНаКнопку(Парам01)","ВОткрытойФормеЯНажимаюНаКнопку","И     В открытой форме я нажимаю на кнопку ""Открыть обработку""","",""); //уже был в C:\Repo\vanessa-behavior\features\Libraries\UITestRunner\step_definitions\РаботаСИнтерфейсом.epf
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯУказываюПутьКФайлу()","ЯУказываюПутьКФайлу","Когда я указываю путь к файлу","","");
//	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯНажимаюКнопкуВыбораУПоля(Парам01)","ВОткрытойФормеЯНажимаюКнопкуВыбораУПоля","И     В открытой форме я нажимаю кнопку выбора у поля ""Путь к файлу""","",""); //уже был в C:\Repo\vanessa-behavior\features\Libraries\UITestRunner\step_definitions\РаботаСИнтерфейсом.epf
//	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯОткрываюВыпадающийСписок(Парам01)","ВОткрытойФормеЯОткрываюВыпадающийСписок","И     В открытой форме я открываю выпадающий список ""Группа загрузки""","",""); //уже был в C:\Repo\vanessa-behavior\features\Libraries\UITestRunner\step_definitions\РаботаСИнтерфейсом.epf
//	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВОткрытойФормеЯВыбираюЗначениеРеквизитаИзФормыСписка(Парам01)","ВОткрытойФормеЯВыбираюЗначениеРеквизитаИзФормыСписка","И     В открытой форме я выбираю значение реквизита ""Группа загрузки"" из формы списка","",""); //уже был в C:\Repo\vanessa-behavior\features\Libraries\UITestRunner\step_definitions\РаботаСИнтерфейсом.epf
//	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВПанелиРазделовЯВыбираю(Парам01)","ВПанелиРазделовЯВыбираю","Когда В панели разделов я выбираю ""Справочники""","",""); //уже был в C:\Repo\vanessa-behavior\features\Libraries\UITestRunner\step_definitions\РаботаСИнтерфейсом.epf
//	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВПанелиФункцийЯВыбираю(Парам01)","ВПанелиФункцийЯВыбираю","И     В панели функций я выбираю ""Номенклатура""","",""); //уже был в C:\Repo\vanessa-behavior\features\Libraries\UITestRunner\step_definitions\РаботаСИнтерфейсом.epf
//	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВФормеВТЧЯВыбираюТекущуюСтроку(Парам01,Парам02)","ВФормеВТЧЯВыбираюТекущуюСтроку","И     В форме ""Номенклатура"" в ТЧ ""Список"" я выбираю текущую строку","",""); //уже был в C:\Repo\vanessa-behavior\features\Libraries\UITestRunner\step_definitions\РаботаСИнтерфейсом.epf
//	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ТаблицаФормыСИменемСталаРавной(Парам01,ТабПарам)","ТаблицаФормыСИменемСталаРавной","И     таблица формы с именем ""Список"" стала равной:","",""); //уже был в C:\Repo\vanessa-behavior\features\Libraries\UITestRunner\step_definitions\РаботаСИнтерфейсом.epf
//	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗакрываюОкно(Парам01)","ЯЗакрываюОкно","И     Я закрываю окно ""Номенклатура""","",""); //уже был в C:\Repo\vanessa-behavior\features\Libraries\UITestRunner\step_definitions\РаботаСИнтерфейсом.epf

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции

#КонецОбласти



#Область Работа_со_сценариями

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры

#КонецОбласти


///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////
// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
&НаКлиенте
Функция ПолучитьПутьКФайлуОтносительноКаталогаFeatures(ИмяФайлаСРасширением)
	ПутьКФайлу = "";
	состояниеVanessaBehavior = ванесса.ПолучитьСостояниеVanessaBehavior();
	ПутьКТекущемуFeatureФайлу = состояниеVanessaBehavior.текущаяФича.ПолныйПуть;
	ПутьКФайлу = лев(ПутьКТекущемуFeatureФайлу,СтрНайти(ПутьКТекущемуFeatureФайлу,"features") - 1) + ИмяФайлаСРасширением;
	возврат ПутьКФайлу;

КонецФункции // ПолучитьПутьКФайлуОтносительноКаталогаFeatures()


&НаСервере
Функция утвПолучитьЭлементГруппуСправочника(ИмяСправочника, Код = "", Наименование = "", ИскатьГруппу = Ложь)
	если истина
		и ПустаяСтрока(Код)
		и ПустаяСтрока(Наименование) 
		тогда
		
		ВызватьИсключение "Не заполнено ни одно свойство поиска";
		
	ИначеЕсли истина
		и ЗначениеЗаполнено(Код)
		и ЗначениеЗаполнено(Наименование)
		тогда
		
		ПредставлениеПоиска = "коду """ + Код + """ и наименованию """ + Наименование + """";
		
	ИначеЕсли ЗначениеЗаполнено(Код) тогда
		
		ПредставлениеПоиска = "коду """ + Код + """";
		
	ИначеЕсли ЗначениеЗаполнено(Наименование) тогда
		
		ПредставлениеПоиска = "наименованию """ + Наименование + """";
		
	КонецЕсли;
	
	текстИсключения = "Не нашли #ГруппуИлиЭлемент справочника #ИмяСправочника по #ПредставлениеПоиска";
	текстИсключения = СтрЗаменить(текстИсключения, "#ГруппуИлиЭлемент",?(ИскатьГруппу,"группу", "элемент"));
	текстИсключения = СтрЗаменить(текстИсключения,"#ИмяСправочника", ИмяСправочника);
	текстИсключения = СтрЗаменить(текстИсключения,"#ПредставлениеПоиска", ПредставлениеПоиска);
	
	Запрос = новый запрос("ВЫБРАТЬ
	                      |	Справочник.Ссылка
	                      |ИЗ
	                      |	Справочник." + ИмяСправочника + " КАК Справочник
	                      |ГДЕ
	                      |	Справочник.ЭтоГруппа = &ИскатьГруппу
	                      |	" + ?(ПустаяСтрока(Код),"","И Справочник.код = &Код") + "
	                      |	" + ?(ПустаяСтрока(Наименование), "", "И Справочник.Наименование = &Наименование") + "
						  |");
	Запрос.УстановитьПараметр("ИскатьГруппу",ИскатьГруппу);
	Запрос.УстановитьПараметр("Код",Код);
	Запрос.УстановитьПараметр("Наименование",Наименование);
	
	результатЗапроса = Запрос.Выполнить();
	
	если результатЗапроса.Пустой() тогда
		
		ВызватьИсключение текстИсключения;
		
	КонецЕсли;
	
	выборкаДетальныеЗаписи = результатЗапроса.Выбрать();
	выборкаДетальныеЗаписи.Следующий();
	
	возврат выборкаДетальныеЗаписи.ссылка;
	

КонецФункции // утвПолучитьЭлементГруппуСправочника()

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаСервере
Процедура утвВГруппеСправочникаНетЭлементов(ИмяСправочника,Группа, ТекстИсключения = "")
	Запрос = новый запрос("ВЫБРАТЬ
	                      |	Справочник.Ссылка
	                      |ИЗ
	                      |	Справочник." + ИмяСправочника + " КАК Справочник
	                      |ГДЕ
	                      |	Справочник.Ссылка В ИЕРАРХИИ(&Группа)
	                      |	И Справочник.Ссылка <> &Группа");
	Запрос.УстановитьПараметр("Группа",Группа);
	
	РезультатЗапроса = Запрос.Выполнить();
	если не РезультатЗапроса.Пустой() тогда
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
КонецПроцедуры // утвВГруппеСправочникНетЭлементов()

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаСервере
Процедура УдалитьЭлементыСправочникаВГруппе(ИмяСправочника, Группа)
	Запрос = новый Запрос("ВЫБРАТЬ
	                      |	Справочник.Ссылка
	                      |ИЗ
	                      |	Справочник." + ИмяСправочника + " КАК Справочник
	                      |ГДЕ
	                      |	Справочник.Ссылка В ИЕРАРХИИ(&Группа)
						  | И Справочник.Ссылка <> &Группа");
	запрос.УстановитьПараметр("Группа", Группа);
	РезультатЗапроса = Запрос.Выполнить();
	
	если РезультатЗапроса.Пустой() тогда
		Возврат;
	КонецЕсли;
	
	выборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	пока выборкаДетальныеЗаписи.Следующий() цикл
		обЭлемент = выборкаДетальныеЗаписи.ссылка.получитьОбъект();
		обЭлемент.удалить();
	КонецЦикла;
КонецПроцедуры // УдалитьЭлементыСправочникаВГруппе()


&НаКлиенте
//Допустим я подготавливаю группу с наименованием "Материалы" справочника "Номенклатура"
//@ЯПодготавливаюГруппуСНаименованиемСправочника(Парам01,Парам02)
Процедура ЯПодготавливаюГруппуСНаименованиемСправочника(НаименованиеГруппы,ПредставлениеСправочника) Экспорт
	Группа = утвПолучитьЭлементГруппуСправочника(ПредставлениеСправочника,,НаименованиеГруппы,Истина);
	УдалитьЭлементыСправочникаВГруппе(ПредставлениеСправочника, Группа);
	СостояниеVanessaBehavior = Ванесса.получитьСостояниеVanessaBehavior();
	если СостояниеVanessaBehavior.ТекущийСценарий.Имя = "Загрузка материалов из файла materials.json с проверкой синхронизации" тогда
		
	КонецЕсли;
	
КонецПроцедуры

//&НаКлиенте
////Дано Я открыл новый сеанс TestClient или подключил уже существующий
////@ЯОткрылНовыйСеансTestClientИлиПодключилУжеСуществующий()
//Процедура ЯОткрылНовыйСеансTestClientИлиПодключилУжеСуществующий() Экспорт
//	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
//	ВызватьИсключение "Не реализовано.";
//КонецПроцедуры

//&НаКлиенте
////И    Я закрыл все окна клиентского приложения
////@ЯЗакрылВсеОкнаКлиентскогоПриложения()
//Процедура ЯЗакрылВсеОкнаКлиентскогоПриложения() Экспорт
//	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
//	ВызватьИсключение "Не реализовано.";
//КонецПроцедуры

//&НаКлиенте
////И Пауза 3
////@Пауза(Парам01)
//Процедура Пауза(Парам01) Экспорт
//	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
//	ВызватьИсключение "Не реализовано.";
//КонецПроцедуры

&НаКлиенте
//Допустим в справочнике "Номенклатура" в группе с наименованием "Материалы" нет элементов
//@ВСправочникеВГруппеСНаименованиемНетЭлементов(Парам01,Парам02)
Процедура ВСправочникеВГруппеСНаименованиемНетЭлементов(ПредставлениеСправочника,НаименованиеГруппы) Экспорт
	Группа = утвПолучитьЭлементГруппуСправочника(ПредставлениеСправочника,,НаименованиеГруппы,Истина);
	утвВГруппеСправочникаНетЭлементов(ПредставлениеСправочника,Группа, "В группе уже есть материалы");
КонецПроцедуры

//&НаКлиенте
////Когда открылось окно "hot click"
////@ОткрылосьОкно(Парам01)
//Процедура ОткрылосьОкно(Парам01) Экспорт
//	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
//	ВызватьИсключение "Не реализовано.";
//КонецПроцедуры

//&НаКлиенте
////И     В форме "hot click" в таблице "Состав" я перехожу к строке:
////@ВФормеВТаблицеЯПерехожуКСтроке(Парам01,Парам02,ТабПарам)
//Процедура ВФормеВТаблицеЯПерехожуКСтроке(Парам01,Парам02,ТабПарам) Экспорт
//	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
//	ВызватьИсключение "Не реализовано.";
//КонецПроцедуры

//&НаКлиенте
////И     В открытой форме я нажимаю на кнопку "Открыть обработку"
////@ВОткрытойФормеЯНажимаюНаКнопку(Парам01)
//Процедура ВОткрытойФормеЯНажимаюНаКнопку(Парам01) Экспорт
//	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
//	ВызватьИсключение "Не реализовано.";
//КонецПроцедуры

&НаКлиенте
//Когда я указываю путь к файлу
//@ЯУказываюПутьКФайлу()
Процедура ЯУказываюПутьКФайлу() Экспорт
	ИмяФайла = ПолучитьПутьКФайлуОтносительноКаталогаFeatures("examples\materials.json");
	КонтекстСохраняемый.ТестовоеПриложение.УстановитьРезультатДиалогаВыбораФайла(Истина,ИмяФайла);	
КонецПроцедуры

//&НаКлиенте
////И     В открытой форме я нажимаю кнопку выбора у поля "Путь к файлу"
////@ВОткрытойФормеЯНажимаюКнопкуВыбораУПоля(Парам01)
//Процедура ВОткрытойФормеЯНажимаюКнопкуВыбораУПоля(Парам01) Экспорт
//	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
//	ВызватьИсключение "Не реализовано.";
//КонецПроцедуры

//&НаКлиенте
////И     В открытой форме я открываю выпадающий список "Группа загрузки"
////@ВОткрытойФормеЯОткрываюВыпадающийСписок(Парам01)
//Процедура ВОткрытойФормеЯОткрываюВыпадающийСписок(Парам01) Экспорт
//	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
//	ВызватьИсключение "Не реализовано.";
//КонецПроцедуры

//&НаКлиенте
////И     В открытой форме я выбираю значение реквизита "Группа загрузки" из формы списка
////@ВОткрытойФормеЯВыбираюЗначениеРеквизитаИзФормыСписка(Парам01)
//Процедура ВОткрытойФормеЯВыбираюЗначениеРеквизитаИзФормыСписка(Парам01) Экспорт
//	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
//	ВызватьИсключение "Не реализовано.";
//КонецПроцедуры

//&НаКлиенте
////Когда В панели разделов я выбираю "Справочники"
////@ВПанелиРазделовЯВыбираю(Парам01)
//Процедура ВПанелиРазделовЯВыбираю(Парам01) Экспорт
//	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
//	ВызватьИсключение "Не реализовано.";
//КонецПроцедуры

//&НаКлиенте
////И     В панели функций я выбираю "Номенклатура"
////@ВПанелиФункцийЯВыбираю(Парам01)
//Процедура ВПанелиФункцийЯВыбираю(Парам01) Экспорт
//	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
//	ВызватьИсключение "Не реализовано.";
//КонецПроцедуры

//&НаКлиенте
////И     В форме "Номенклатура" в ТЧ "Список" я выбираю текущую строку
////@ВФормеВТЧЯВыбираюТекущуюСтроку(Парам01,Парам02)
//Процедура ВФормеВТЧЯВыбираюТекущуюСтроку(Парам01,Парам02) Экспорт
//	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
//	ВызватьИсключение "Не реализовано.";
//КонецПроцедуры

//&НаКлиенте
////И     таблица формы с именем "Список" стала равной:
////@ТаблицаФормыСИменемСталаРавной(Парам01,ТабПарам)
//Процедура ТаблицаФормыСИменемСталаРавной(Парам01,ТабПарам) Экспорт
//	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
//	ВызватьИсключение "Не реализовано.";
//КонецПроцедуры

//&НаКлиенте
////И     Я закрываю окно "Номенклатура"
////@ЯЗакрываюОкно(Парам01)
//Процедура ЯЗакрываюОкно(Парам01) Экспорт
//	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
//	ВызватьИсключение "Не реализовано.";
//КонецПроцедуры
