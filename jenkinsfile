def ConnectionString
def versionText
def versionValue
def uccode
def locparams

pipeline{
    agent{
        label 'bdd'
    }
    environment{
        Storage = credentials('storage_trade_nikeuk')
        db_test = credentials('Trade_dev')
    }
    stages{
        stage('Обновление тестового контура'){
            steps{
                timestamps{
                    script{
                        ConnectionString = "\"/S${env.server1C}\\${env.database1C}\""
                        uccode ="\"123\""
                        locparams = "-lockmessage \"Сборка\" -lockuccode ${uccode}"
                        versionText = readFile encoding: 'UTF-8', file: 'src/cf/VERSION'
                        versionValue = (versionText =~ /<VERSION>(.*)<\/VERSION>/)[0][1]
                    }
                    //cmd("deployka session lock -ras ${env.server1C} -rac \"C:/Program Files/1cv8/8.3.11.3034/bin/rac.exe\" -db ${env.database1C} ${locparams} -db-user ${env.db_test_usr} -db-pwd ${env.db_test_pwd}")
                    cmd("deployka session lock -ras ${env.server1C} -db ${env.database1C} ${locparams} -db-user ${env.db_test_usr} -db-pwd ${env.db_test_pwd}")
                    cmd("deployka session kill -ras ${env.server1C} -db ${env.database1C} ${locparams} -db-user ${env.db_test_usr} -db-pwd ${env.db_test_pwd}")
                    cmd("deployka loadrepo ${ConnectionString} \"${env.storagePath}\" -storage-user ${env.Storage_Usr} -storage-pwd ${env.Storage_Psw} -storage-ver ${versionValue}")
                    cmd("deployka dbupdate ${ConnectionString} -allow-warnings")
                    cmd("deployka session unlock -ras ${env.server1C} -db ${env.database1C} ${locparams} -db-user ${env.db_test_usr} -db-pwd ${env.db_test_pwd}")
                }
            }

        }
    }
}

def cmd(command){
    if (isUnix()){
        sh "${command}"
    } else
    {
        bat """
        chcp 65001
        ${command}
        """
   }
}